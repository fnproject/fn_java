/*
 * fn
 * The open source serverless platform.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Error;
import io.swagger.client.model.Trigger;
import io.swagger.client.model.TriggerList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TriggersApi
 */
@Ignore
public class TriggersApiTest {

    private final TriggersApi api = new TriggersApi();

    
    /**
     * Create A New Trigger.
     *
     * Creates a new Trigger, returning the complete entity.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createTriggerTest() throws ApiException {
        Trigger body = null;
        Trigger response = api.createTrigger(body);

        // TODO: test validations
    }
    
    /**
     * Delete A Trigger
     *
     * Delete the specified Trigger.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteTriggerTest() throws ApiException {
        String triggerID = null;
        api.deleteTrigger(triggerID);

        // TODO: test validations
    }
    
    /**
     * Get Definition Of A Trigger
     *
     * Gets the definition for the Trigger with the specified ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTriggerTest() throws ApiException {
        String triggerID = null;
        Trigger response = api.getTrigger(triggerID);

        // TODO: test validations
    }
    
    /**
     * Get A List Of Triggers Within An Application Or Function
     *
     * This will list all Triggers for a particular Application or Function, returned in name alphabetical order.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listTriggersTest() throws ApiException {
        String appId = null;
        String fnId = null;
        String cursor = null;
        Integer perPage = null;
        String name = null;
        TriggerList response = api.listTriggers(appId, fnId, cursor, perPage, name);

        // TODO: test validations
    }
    
    /**
     * Update A Trigger
     *
     * Updates a Trigger by merging the provided values.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateTriggerTest() throws ApiException {
        String triggerID = null;
        Trigger body = null;
        Trigger response = api.updateTrigger(triggerID, body);

        // TODO: test validations
    }
    
}
