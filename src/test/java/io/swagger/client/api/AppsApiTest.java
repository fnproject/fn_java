/*
 * fn
 * The open source serverless platform.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.App;
import io.swagger.client.model.AppList;
import io.swagger.client.model.Error;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AppsApi
 */
@Ignore
public class AppsApiTest {

    private final AppsApi api = new AppsApi();

    
    /**
     * Create A New Application
     *
     * Creates a new Application, returning the complete entity.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAppTest() throws ApiException {
        App body = null;
        App response = api.createApp(body);

        // TODO: test validations
    }
    
    /**
     * Delete An Application
     *
     * Delete the specified Application.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAppTest() throws ApiException {
        String appID = null;
        api.deleteApp(appID);

        // TODO: test validations
    }
    
    /**
     * Get Information For An Application
     *
     * Returns more details about an Application, such as statistics.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppTest() throws ApiException {
        String appID = null;
        App response = api.getApp(appID);

        // TODO: test validations
    }
    
    /**
     * Get A List Of Applications
     *
     * Get a filtered list of Applications in alphabetical order.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAppsTest() throws ApiException {
        String cursor = null;
        Integer perPage = null;
        String name = null;
        AppList response = api.listApps(cursor, perPage, name);

        // TODO: test validations
    }
    
    /**
     * Update an Application
     *
     * Updates an Application via merging the provided values.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateAppTest() throws ApiException {
        String appID = null;
        App body = null;
        App response = api.updateApp(appID, body);

        // TODO: test validations
    }
    
}
