/*
 * fn
 * The open source serverless platform.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;

/**
 * App
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-27T15:47:31.669Z")
public class App {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("config")
  private Map<String, String> config = null;

  @SerializedName("annotations")
  private Map<String, Object> annotations = null;

  @SerializedName("syslog_url")
  private String syslogUrl = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

   /**
   * App ID
   * @return id
  **/
  @ApiModelProperty(value = "App ID")
  public String getId() {
    return id;
  }

   /**
   * Name of this app. Must be different than the image name. Can ony contain alphanumeric, -, and _.
   * @return name
  **/
  @ApiModelProperty(value = "Name of this app. Must be different than the image name. Can ony contain alphanumeric, -, and _.")
  public String getName() {
    return name;
  }

  public App config(Map<String, String> config) {
    this.config = config;
    return this;
  }

  public App putConfigItem(String key, String configItem) {
    if (this.config == null) {
      this.config = new HashMap<String, String>();
    }
    this.config.put(key, configItem);
    return this;
  }

   /**
   * Application function configuration, applied to all Functions.
   * @return config
  **/
  @ApiModelProperty(value = "Application function configuration, applied to all Functions.")
  public Map<String, String> getConfig() {
    return config;
  }

  public void setConfig(Map<String, String> config) {
    this.config = config;
  }

  public App annotations(Map<String, Object> annotations) {
    this.annotations = annotations;
    return this;
  }

  public App putAnnotationsItem(String key, Object annotationsItem) {
    if (this.annotations == null) {
      this.annotations = new HashMap<String, Object>();
    }
    this.annotations.put(key, annotationsItem);
    return this;
  }

   /**
   * Application annotations - this is a map of annotations attached to this app, keys must not exceed 128 bytes and must consist of non-whitespace printable ascii characters, and the seralized representation of individual values must not exeed 512 bytes.
   * @return annotations
  **/
  @ApiModelProperty(value = "Application annotations - this is a map of annotations attached to this app, keys must not exceed 128 bytes and must consist of non-whitespace printable ascii characters, and the seralized representation of individual values must not exeed 512 bytes.")
  public Map<String, Object> getAnnotations() {
    return annotations;
  }

  public void setAnnotations(Map<String, Object> annotations) {
    this.annotations = annotations;
  }

  public App syslogUrl(String syslogUrl) {
    this.syslogUrl = syslogUrl;
    return this;
  }

   /**
   * A comma separated list of syslog urls to send all function logs to. supports tls, udp or tcp. e.g. tls://logs.papertrailapp.com:1
   * @return syslogUrl
  **/
  @ApiModelProperty(value = "A comma separated list of syslog urls to send all function logs to. supports tls, udp or tcp. e.g. tls://logs.papertrailapp.com:1")
  public String getSyslogUrl() {
    return syslogUrl;
  }

  public void setSyslogUrl(String syslogUrl) {
    this.syslogUrl = syslogUrl;
  }

   /**
   * Time when app was created. Always in UTC.
   * @return createdAt
  **/
  @ApiModelProperty(value = "Time when app was created. Always in UTC.")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

   /**
   * Most recent time that app was updated. Always in UTC.
   * @return updatedAt
  **/
  @ApiModelProperty(value = "Most recent time that app was updated. Always in UTC.")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    App app = (App) o;
    return Objects.equals(this.id, app.id) &&
        Objects.equals(this.name, app.name) &&
        Objects.equals(this.config, app.config) &&
        Objects.equals(this.annotations, app.annotations) &&
        Objects.equals(this.syslogUrl, app.syslogUrl) &&
        Objects.equals(this.createdAt, app.createdAt) &&
        Objects.equals(this.updatedAt, app.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, config, annotations, syslogUrl, createdAt, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class App {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    syslogUrl: ").append(toIndentedString(syslogUrl)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

